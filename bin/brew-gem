#!/usr/bin/env ruby

if  !ARGV[0] || ARGV[0] == 'help'
  abort "Please specify a gem name (e.g. brew gem command <name>)
  install - Install a brew gem, accepts an optional version argument (e.g. brew gem install <name> <version>)
  upgrade - Upgrade to the latest version of a brew gem
  uninstall - Uninstall a brew gem"
end

command = ARGV[0]
name = ARGV[1]
gems = `gem list --remote "^#{name}$"`.lines
unless gems.detect { |f| f =~ /^#{name} \(([^\s,]+).*\)/ }
  abort "Could not find a valid gem '#{name}'"
end
version = ARGV[2] || $1

klass = name.capitalize.gsub(/[-_.\s]([a-zA-Z0-9])/) { version.upcase }.gsub('+', 'x')

require 'erb'
template = ERB.new(File.read(__FILE__).split(/^__END__$/, 2)[1].strip)

require 'tempfile'
filename = File.join Dir.tmpdir, "#{name}.rb"

begin
  open(filename, 'w') do |f|
    f.puts template.result(binding)
  end

  system "brew #{command} #{filename}"
ensure
  File.unlink filename
end

__END__
require 'formula'

class RubyGemsDownloadStrategy < AbstractDownloadStrategy
  def fetch
    ohai "Fetching #{name} from gem source"
    `cd #{HOMEBREW_CACHE} && gem fetch #{name} --version #{resource.version}`
  end

  def cached_location
    Pathname.new("#{HOMEBREW_CACHE}/#{name}-#{resource.version}")
  end

  def clear_cache
   cached_location.unlink if cached_location.exists?
  end

  def stage; end
end

class Resource
  def download_strategy
    RubyGemsDownloadStrategy
  end
end


class <%= klass %> < Formula
  url "<%= name %>"
  version "<%= version %>"

  def install
    # set GEM_HOME and GEM_PATH to make sure we package all the dependent gems
    # together without accidently picking up other gems on the gem path since
    # they might not be there if, say, we change to a different rvm gemset
    ENV['GEM_HOME']="#{prefix}"
    ENV['GEM_PATH']="#{prefix}"
    system "gem", "install", "#{HOMEBREW_CACHE}/#{name}-#{version}.gem",
             "--no-ri",
             "--no-rdoc",
             "--no-wrapper",
             "--no-user-install",
             "--install-dir", prefix,
             "--bindir", bin

    bin.rmtree
    bin.mkpath

    bash_completion.install 'bash_completion.sh' if File.exists?('bash_completion.sh')
    zsh_completion.install  'zsh_completion.zsh' if File.exists?('zsh_completion.zsh')

    if Dir.exists?('completions')
      bash_completion.install Dir.glob("completions/*.sh").first
      zsh_completion.install  Dir.glob("completions/*.zsh").first
    end

    ruby_libs = Dir.glob("#{prefix}/gems/*/lib")
    Pathname.glob("#{prefix}/gems/#{name}-#{version}/bin/*").each do |file|
      (bin+file.basename).open('w') do |f|
        f << <<-RUBY
#!/usr/bin/ruby
ENV['GEM_HOME']="#{prefix}"
ENV['GEM_PATH']="#{prefix}"
$:.unshift(#{ruby_libs.map(&:inspect).join(",")})
load "#{file}"
        RUBY
      end
    end
  end
end

